import Vue from 'vue'
import Vuex from 'vuex'

Vue.use(Vuex)

export default new Vuex.Store({
  state: {
    currentWord:[]
  },
  mutations: {
    SET_WORD(state,dataWord){
      state.currentWord = dataWord
    }
  },
  actions: {
    fetchWords(context,payload){
      //data words apakah dipanggil axios aja nantinya??
      let words = Promise.resolve([
        'abap',
        'able',
        'abset',
        'absys',
        'acs',
        'actionscript',
        'admin',
        'aldor',
        'alef',
        'algol',
        'afterAll',
        'algorithm',
        'atlas',
        'array',
        'autocoder',
        'apple',
        'axios',
        'basic',
        'bootstrap',
        'beanshell',
        'beforeCreate',
        'bcrypt',
        'bcryptjs',
        'boxx',
        'borland',
        'bodyparser',
        'bpel',
        'bugsys',
        'csharp',
        'chrome',
        'cshell',
        'chain',
        'chapel',
        'cobol',
        'coffeescript',
        'comparesync',
        'cms',
        'cobra',
        'comal',
        'common',
        'cors',
        'cue',
        'dasl',
        'darkbasic',
        'delphi',
        'decode',
        'debug',
        'dialec',
        'dbase',
        'dbeaver',
        'dreammaker',
        'dotenv',
        'easy',
        'exec',
        'escapade',
        'factor',
        'flow',
        'flash',
        'focus',
        'function',
        'forth',
        'fortran',
        'foxpro',
        'fscript',
        'firebase',
        'frontier',
        'generic',
        'golang',
        'godiva',
        'gotran',
        'groovy',
        'google',
        'graphtalk',
        'hals',
        'hascript',
        'hashSync',
        'hdl',
        'html',
        'hotbasic',
        'hypertalk',
        'ibm',
        'icon',
        'imp',
        'inform',
        'intercal',
        'init',
        'iptscrae',
        'io',
        'javascript',
        'java',
        'janus',
        'j2ee',
        'jsp',
        'jsonwebtoken',
        'jscript',
        'jquery',
        'korn',
        'kiev',
        'krypton',
        'krc',
        'labview',
        'legoscript',
        'leopard',
        'lfyre',
        'lingo',
        'linter',
        'lisaac',
        'lucid',
        'lush',
        'lyapas',
        'mad',
        'madcap',
        'meta',
        'mapbasic',
        'magma',
        'mapper',
        'matlab',
        'matematica',
        'mercury',
        'method',
        'methods',
        'mindscript',
        'modcap',
        'modular',
        'netflix',
        'netbean',
        'netscape',
        'newtonscript',
        'nice',
        'nusaptel',
        'net',
        'oberon',
        'obliq',
        'object',
        'objectoriented',
        'octave',
        'open',
        'orm',
        'oxygene',
        'oz',
        'phyton',
        'pascal',
        'palindrome',
        'pentagram',
        'parser',
        'perl',
        'php',
        'pilot',
        'portran',
        'processing',
        'prolog',
        'props',
        'progressivewebapp',
        'port',
        'postscript',
        'quakec',
        'quickcomp',
        'repl',
        'ruby',
        'react',
        'rust',
        'response',
        'request',
        'shadow',
        'small',
        'scar',
        'script',
        'socket',
        'spice',
        'slice',
        'splice',
        'string',
        'sass',
        'sequelize',
        'singlepageapllication',
        'scala',
        'snobol',
        'supertest',
        'tempo',
        'teco',
        'tie',
        'turbopascal',
        'torquescript',
        'telcomp',
        'telkom',
        'tutorial',
        'thead',
        'tbody',
        'table',
        'tag',
        'this',
        'this.',
        'unicorn',
        'unique',
        'unity',
        'unix',
        'unrealscript',
        'use',
        'urlencoded',
        'vue',
        'vetur',
        'visualcode',
        'visualbasic',
        'vbscript',
        'viewengine',
        'where',
        'whitespace',
        'xquery',
        'xpl',
        'xharbour',
        'xslt',
        'yellow',
        'yorick',
        'yacc',
        'zuq',
        'zzt',
        'zsh',
        'zonnon'
      ])
      words.then(data =>{
        const randomWordsIndex = Math.floor(Math.random() * data.length)
        context.commit('SET_WORD',data[randomWordsIndex])
      })
      .catch(err=>{
        console.log(err)
      })
    }
  },
  modules: {
  }
})
